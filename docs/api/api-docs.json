{
  "openapi": "3.0.3",
  "info": {
    "title": "Parking Management System API Documentation",
    "version": "1.0.0",
    "description": "A robust parking management system API that handles vehicle tracking and automated data cleanup.\n\nFeatures:\n- Vehicle registration and tracking\n- Automated data cleanup based on retention period\n- Comprehensive audit logging\n- Real-time vehicle search\n- Rate limiting and security measures"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/vehicles": {
      "post": {
        "summary": "Create Vehicle",
        "description": "Register a new vehicle entry",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Vehicle created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Vehicles",
        "description": "List all active vehicles with pagination",
        "responses": {
          "200": {
            "description": "List of vehicles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedVehicles"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/{number_plate}": {
      "get": {
        "summary": "Get Vehicle",
        "description": "Get vehicle details by number plate",
        "parameters": [
          {
            "name": "number_plate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle"
                }
              }
            }
          },
          "404": {
            "description": "Vehicle not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove Vehicle",
        "description": "Remove a vehicle entry",
        "parameters": [
          {
            "name": "number_plate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle removed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle"
                }
              }
            }
          },
          "404": {
            "description": "Vehicle not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vehicles/search/{term}": {
      "get": {
        "summary": "Search Vehicles",
        "description": "Search vehicles by number plate or contact name",
        "parameters": [
          {
            "name": "term",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedVehicles"
                }
              }
            }
          }
        }
      }
    },
    "/config/retention": {
      "get": {
        "summary": "Get Retention Period",
        "description": "Get current data retention period",
        "responses": {
          "200": {
            "description": "Current retention period",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfig"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Retention Period",
        "description": "Update data retention period",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemConfigUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated retention period",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfig"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/config/maintenance/clear": {
      "post": {
        "summary": "Clear Database",
        "description": "Clear entire database (requires confirmation)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "confirmation": {
                    "type": "string",
                    "example": "I understand this will delete all data"
                  }
                },
                "required": ["confirmation"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Database cleared",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClearDatabaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/audit": {
      "get": {
        "summary": "Get Audit Logs",
        "description": "Get all audit logs with pagination",
        "responses": {
          "200": {
            "description": "List of audit logs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAuditLogs"
                }
              }
            }
          }
        }
      }
    },
    "/audit/entity/{entity}": {
      "get": {
        "summary": "Get Entity Logs",
        "description": "Get audit logs for a specific entity",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entity audit logs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAuditLogs"
                }
              }
            }
          }
        }
      }
    },
    "/audit/recent": {
      "get": {
        "summary": "Get Recent Logs",
        "description": "Get most recent audit logs",
        "responses": {
          "200": {
            "description": "Recent audit logs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAuditLogs"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Vehicle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "number_plate": {
            "type": "string"
          },
          "contact_name": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "entry_timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "number_plate", "contact_name", "phone_number", "entry_timestamp"]
      },
      "VehicleCreate": {
        "type": "object",
        "properties": {
          "number_plate": {
            "type": "string"
          },
          "contact_name": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          }
        },
        "required": ["number_plate", "contact_name", "phone_number"]
      },
      "SystemConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "retention_hours": {
            "type": "integer",
            "minimum": 1
          }
        },
        "required": ["id", "retention_hours"]
      },
      "SystemConfigUpdate": {
        "type": "object",
        "properties": {
          "retention_hours": {
            "type": "integer",
            "minimum": 1
          }
        },
        "required": ["retention_hours"]
      },
      "AuditLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "action": {
            "type": "string",
            "enum": ["CREATE", "UPDATE", "DELETE"]
          },
          "entity": {
            "type": "string"
          },
          "entity_id": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "action", "entity", "entity_id", "details", "timestamp"]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "current_page": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_items": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          }
        }
      },
      "PaginatedVehicles": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vehicle"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "PaginatedAuditLogs": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLog"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "ClearDatabaseResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "records_removed": {
            "type": "integer"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "All endpoints require API key authentication"
      }
    }
  }
}